/* This file is the descriptor for the python runnable azure-ml */
{
    "meta": {
        // label: name of the runnable as displayed, should be short
        "label": "Custom runnable azure-ml",

        // description: longer string to help end users understand what this runnable does
        "description": "Collects governance metadata from Azure Machine Learning and send them to Dataiku Govern",

        // icon: must be one of the FontAwesome 5.15.4 icons, complete list here at https://fontawesome.com/v5/docs/
        "icon": "fas fa-puzzle-piece"
    },

    /* whether the runnable's code is untrusted */
    "impersonate": false,
    
    "tabs": [
        {
            "name": "Azure ML",
            "label": "AzureMl Source"
        },
        {
            "name": "Govern",
            "label": "Govern Destination"
        }
    ],


    "params": [
       
        {
            "name": "tenant_id",
            "type": "STRING",
            "label": "Azure Tenant ID",
            "mandatory": true
        },
        {
            "name": "client_id",
            "type": "STRING",
            "label": "Client ID",
            "mandatory": true
        },
        {
            "name": "client_secret",
            "type": "PASSWORD",
            "label": "Client Secret",
            "mandatory": true
        },
        {
            "name": "govern_base",
            "type": "STRING",
            "label": "govern base URL",
            "mandatory": true
        },
        {
            "name": "govern_API_key",
            "type": "PASSWORD",
            "label": "Govern API Key"
        }
    ],
    /* params:
    DSS will generate a formular from this list of requested parameters.
    Your component code can then access the value provided by users using the "name" field of each parameter.

    Available parameter types include:
    STRING, INT, DOUBLE, BOOLEAN, DATE, SELECT, TEXTAREA, DATASET, DATASET_COLUMN, MANAGED_FOLDER, PRESET and others.

    For the full list and for more details, see the documentation: https://doc.dataiku.com/dss/latest/plugins/reference/params.html
    */

    /* list of required permissions on the project to see/run the runnable */
    "permissions": [],

    /* what the code's run() returns:
       - NONE : no result
       - HTML : a string that is a html (utf8 encoded)
       - FOLDER_FILE : a (folderId, path) pair to a file in a folder of this project (json-encoded)
       - FILE : raw data (as a python string) that will be stored in a temp file by DSS
       - URL : a url
     */
    "resultType": "HTML",

    /* label to use when the runnable's result is not inlined in the UI (ex: for urls) */
    "resultLabel": "my production",

    /* for FILE resultType, the extension to use for the temp file */
    "extension": "txt",

    /* for FILE resultType, the type of data stored in the temp file */
    "mimeType": "text/plain",

    /* Macro roles define where this macro will appear in DSS GUI. They are used to pre-fill a macro parameter with context.

       Each role consists of:
        - type: where the macro will be shown
            * when selecting DSS object(s): DATASET, DATASETS, API_SERVICE, API_SERVICE_VERSION, BUNDLE, VISUAL_ANALYSIS, SAVED_MODEL, MANAGED_FOLDER
            * in the global project list: PROJECT_MACROS
        - targetParamsKey(s): name of the parameter(s) that will be filled with the selected object
    */
    "macroRoles": [
     /* {
            "type": "DATASET",
            "targetParamsKey": "input_dataset"
        } */
    ]
}
